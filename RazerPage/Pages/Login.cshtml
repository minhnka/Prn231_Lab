@page
@model RazerPage.Pages.LoginModel
@{
    ViewData["Title"] = "Log in";
}

<div class="row justify-content-center">
    <div class="col-md-6">
        <h1 class="mb-4">@ViewData["Title"]</h1>
        <div class="card">
            <div class="card-body">
                <form method="post">
                    <div asp-validation-summary="ModelOnly" class="text-danger mb-3"></div>

                    <div class="mb-3">
                        <label asp-for="LoginInput.Email" class="form-label"></label>
                        <input asp-for="LoginInput.Email" class="form-control" autocomplete="username" />
                        <span asp-validation-for="LoginInput.Email" class="text-danger"></span>
                    </div>

                    <div class="mb-3">
                        <label asp-for="LoginInput.Password" class="form-label"></label>
                        <input asp-for="LoginInput.Password" class="form-control" type="password" autocomplete="current-password" />
                        <span asp-validation-for="LoginInput.Password" class="text-danger"></span>
                    </div>

                    <div class="mb-3 form-check">
                        <input asp-for="LoginInput.RememberMe" class="form-check-input" />
                        <label asp-for="LoginInput.RememberMe" class="form-check-label"></label>
                    </div>

                    <button type="submit" class="btn btn-primary">Log in</button>
                </form>
            </div>
        </div>

        <div class="mt-3">
            <p>
                <a asp-page="./Register">Register as a new user</a>
            </p>
            <p>
                <a asp-page="./ForgotPassword">Forgot your password?</a>
            </p>
        </div>
    </div>
</div>

@section Scripts {
    <partial name="_ValidationScriptsPartial" />

    @if (TempData["JwtToken"] != null)
    {
        <script>
            (function() {
                try {
                    // Safely store JWT token with proper encoding handling
                    const token = '@Html.Raw(Json.Serialize(TempData["JwtToken"]))';
                    localStorage.setItem('jwt_token', token.replace(/^"|"$/g, ''));
                    console.log('JWT token saved to localStorage');
                } catch (err) {
                    console.error('Error storing JWT token:', err);
                }
            })();
        </script>
    }
}